{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst selector = document.querySelector(\"#datetime-picker\");\n\nconst dataStart = document.querySelector(\"[data-start]\");\n\nlet userSelectedDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate < currentDate) {\n      iziToast.warning({\n        color: \"red\",\n        message: \"Please choose a date in the future.\",\n        position: \"topRight\"\n      });\n      dataStart.setAttribute(\"disabled\");\n    } else {\n      dataStart.removeAttribute(\"disabled\");\n    }\n  }\n};\nflatpickr(selector, options);\n\nconst timer = document.querySelector(\".timer\");\n\ndataStart.addEventListener(\"click\", startTimer);\n\nfunction startTimer() {\n  let msDifference = userSelectedDate - new Date();\n  const intervalId = setInterval(() => {\n    let { days, hours, minutes, seconds } = convertMs(msDifference);\n    document.querySelector('[data-days]').textContent = addZeroOnStart(days);\n    document.querySelector('[data-hours]').textContent = addZeroOnStart(hours);\n    document.querySelector('[data-minutes]').textContent = addZeroOnStart(minutes);\n    document.querySelector('[data-seconds]').textContent = addZeroOnStart(seconds);\n    if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n      clearInterval(intervalId);\n      dataStart.removeAttribute(\"disabled\");\n      selector.removeAttribute(\"disabled\");\n    }\n    msDifference -= 1000;\n  }, 1000);\n}\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addZeroOnStart(value) {\n  return value < 10 ? \"0\" + value : value;\n}\n\n// "],"names":["selector","dataStart","userSelectedDate","options","selectedDates","iziToast","flatpickr","startTimer","msDifference","intervalId","days","hours","minutes","seconds","convertMs","addZeroOnStart","ms","value"],"mappings":"0IAOA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EAEpDC,EAAY,SAAS,cAAc,cAAc,EAEvD,IAAIC,EAAmB,EAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAE9BF,EADgB,IAAI,MAEtBG,EAAS,QAAQ,CACf,MAAO,MACP,QAAS,sCACT,SAAU,UAClB,CAAO,EACDJ,EAAU,aAAa,UAAU,GAEjCA,EAAU,gBAAgB,UAAU,CAEvC,CACH,EACAK,EAAUN,EAAUG,CAAO,EAEb,SAAS,cAAc,QAAQ,EAE7CF,EAAU,iBAAiB,QAASM,CAAU,EAE9C,SAASA,GAAa,CACpB,IAAIC,EAAeN,EAAmB,IAAI,KAC1C,MAAMO,EAAa,YAAY,IAAM,CACnC,GAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAY,EAC9D,SAAS,cAAc,aAAa,EAAE,YAAcO,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EACzEH,IAAS,GAAKC,IAAU,GAAKC,IAAY,GAAKC,IAAY,IAC5D,cAAcJ,CAAU,EACxBR,EAAU,gBAAgB,UAAU,EACpCD,EAAS,gBAAgB,UAAU,GAErCQ,GAAgB,GACjB,EAAE,GAAI,CACT,CAGA,SAASM,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAMA,EAAQA,CACpC"}